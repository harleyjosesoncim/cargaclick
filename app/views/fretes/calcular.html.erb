<section
  x-data="{
    peso: '',
    distancia: '', // Este campo será preenchido pelo script JavaScript
    transportador_id: '',
    valido() {
      // A validação agora considera que a distância pode ser preenchida automaticamente.
      // Você pode ajustar se quiser que o usuário digite ou se baseie apenas no cálculo do mapa.
      return this.peso > 0 && parseFloat(this.distancia) > 0 && this.transportador_id !== '';
    }
  }"
  class="bg-white shadow-xl rounded-2xl p-8 my-8 max-w-xl mx-auto"
>
  <h2 class="text-2xl font-bold mb-4 text-blue-700">Simular Frete</h2>

  <%= form_with url: calcular_fretes_path, method: :get, local: true do %>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

      <div>
        <%= label_tag :cep_origem, "CEP de Origem", class: "block text-sm font-medium text-gray-700" %>
        <%= text_field_tag :cep_origem, nil, class: "mt-1 w-full border border-gray-300 rounded px-3 py-2 text-sm shadow-sm" %>
      </div>
      <div>
        <%= label_tag :cep_destino, "CEP de Destino", class: "block text-sm font-medium text-gray-700" %>
        <%= text_field_tag :cep_destino, nil, class: "mt-1 w-full border border-gray-300 rounded px-3 py-2 text-sm shadow-sm" %>
      </div>

      <div>
        <%= label_tag :peso, "Peso da carga (kg)", class: "block text-sm font-medium text-gray-700" %>
        <%= number_field_tag :peso, nil, step: 0.1,
            class: "mt-1 w-full border border-gray-300 rounded px-3 py-2 text-sm shadow-sm",
            'x-model': "peso" %>
        <template x-if="peso !== '' && peso <= 0">
          <p class="text-red-600 text-sm mt-1">Peso deve ser maior que zero</p>
        </template>
      </div>
      <div>
        <%= label_tag :distancia, "Distância (km)", class: "block text-sm font-medium text-gray-700" %>
        <%# O campo de distância agora é somente leitura ou desabilitado, pois será preenchido pelo JS %>
        <%= number_field_tag :distancia, nil, step: 0.1,
            class: "mt-1 w-full border border-gray-300 rounded px-3 py-2 text-sm shadow-sm bg-gray-50",
            'x-model': "distancia", readonly: true %> <%# Adicionado readonly %>
        <template x-if="distancia !== '' && parseFloat(distancia) <= 0"> <%# Usar parseFloat para validação %>
          <p class="text-red-600 text-sm mt-1">Distância deve ser maior que zero</p>
        </template>
      </div>

      <div class="md:col-span-2 my-4">
        <label class="block text-sm font-medium text-gray-700 mb-2">Visualizar Rota no Mapa</label>
        <div id="mapa-rota" class="w-full h-64 rounded-xl border shadow-inner"></div>
      </div>

      <div class="md:col-span-2">
        <%= label_tag :transportador_id, "Transportador", class: "block text-sm font-medium text-gray-700" %>
        <%= select_tag :transportador_id,
            options_from_collection_for_select(@transportadores, :id, :nome),
            include_blank: "Selecione um transportador",
            class: "mt-1 w-full border border-gray-300 rounded px-3 py-2 text-sm shadow-sm",
            'x-model': "transportador_id" %>
        <template x-if="transportador_id === ''">
          <p class="text-red-600 text-sm mt-1">Selecione um transportador</p>
        </template>
      </div>
    </div>

    <div class="mt-6">
      <button
        type="submit"
        class="w-full bg-blue-600 text-white font-semibold px-6 py-3 rounded hover:bg-blue-700 transition disabled:opacity-50"
        :disabled="!valido()"
      >
        Calcular Frete
      </button>
    </div>
  <% end %>

  <% if @valor_estimado.present? %>
    <div class="mt-8 p-6 border rounded-lg bg-gray-50 shadow">
      <h3 class="text-lg font-semibold text-gray-800 mb-2">Resultado da Simulação</h3>
      <p class="text-gray-700 mb-1">
        <strong>Frete estimado:</strong>
        <span class="text-blue-600 font-bold text-xl">R$ <%= @valor_estimado %></span>
      </p>
      <p class="text-sm text-gray-500">
        Valor médio de mercado:
        <span class="text-green-700 font-semibold">R$ <%= @valor_mercado %></span><br>
        (com base em simulação pública ANTT)
      </p>
      <small class="text-xs text-gray-400 mt-2 block">
        Valores estimados não incluem taxas adicionais, pedágios ou seguro.
      </small>
    </div>
  <% end %>

  ---

  ## Script de Visualização e Cálculo de Rota

  <script>
    // Inicializa o mapa UMA ÚNICA VEZ com centro no Brasil
    var map = L.map('mapa-rota').setView([-23.5505, -46.6333], 5); // São Paulo como centro

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 18,
      attribution: '&copy; OpenStreetMap'
    }).addTo(map);

    var origemMarker, destinoMarker; // Variáveis para os marcadores de origem e destino

    async function cepParaLatLng(cep) {
      const viaCep = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
      const dados = await viaCep.json();
      if (!dados.localidade) return null;
      // Encode o endereço completo para garantir a formatação correta da URL para o Nominatim
      const endereco = encodeURIComponent(`${dados.logradouro || ''}, ${dados.localidade}, ${dados.uf}, Brasil`);
      const nominatim = await fetch(`https://nominatim.openstreetmap.org/search?q=${endereco}&format=json&limit=1`);
      const resultado = await nominatim.json();
      if (resultado.length > 0) {
        return [parseFloat(resultado[0].